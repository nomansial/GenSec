{"uid":"629877b96b5e8c86","name":"Verify scan is initiated successfully with valid chatbot and environment IDs -- @1.1 ","fullName":"Initiate Scan using Genr3d API: Verify scan is initiated successfully with valid chatbot and environment IDs","historyId":"974886f2268df271bcb0d104c9bf9698","time":{"start":1757682276048,"stop":1757682281516,"duration":5468},"status":"failed","statusMessage":"AssertionError: Expected <400> to be equal to <200>, but was not.\n","statusTrace":"  File \"C:\\Users\\Noman\\PycharmProjects\\generativesecurity\\.venv\\Lib\\site-packages\\behave\\model.py\", line 1991, in run\n    match.run(runner.context)\n  File \"C:\\Users\\Noman\\PycharmProjects\\generativesecurity\\.venv\\Lib\\site-packages\\behave\\matchers.py\", line 105, in run\n    self.func(context, *args, **kwargs)\n  File \"features\\steps\\Initiate_a_new_scan_for_a_chatbot.py\", line 48, in step_impl\n    assert_that(context.response.status_code).is_equal_to(200)\n  File \"C:\\Users\\Noman\\PycharmProjects\\generativesecurity\\.venv\\Lib\\site-packages\\assertpy\\base.py\", line 126, in is_equal_to\n    self.error('Expected <%s> to be equal to <%s>, but was not.' % (self.val, other))\n  File \"C:\\Users\\Noman\\PycharmProjects\\generativesecurity\\.venv\\Lib\\site-packages\\assertpy\\assertpy.py\", line 433, in error\n    raise AssertionError(out)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected <400> to be equal to <200>, but was not.\n","statusTrace":"  File \"C:\\Users\\Noman\\PycharmProjects\\generativesecurity\\.venv\\Lib\\site-packages\\behave\\model.py\", line 1991, in run\n    match.run(runner.context)\n  File \"C:\\Users\\Noman\\PycharmProjects\\generativesecurity\\.venv\\Lib\\site-packages\\behave\\matchers.py\", line 105, in run\n    self.func(context, *args, **kwargs)\n  File \"features\\steps\\Initiate_a_new_scan_for_a_chatbot.py\", line 48, in step_impl\n    assert_that(context.response.status_code).is_equal_to(200)\n  File \"C:\\Users\\Noman\\PycharmProjects\\generativesecurity\\.venv\\Lib\\site-packages\\assertpy\\base.py\", line 126, in is_equal_to\n    self.error('Expected <%s> to be equal to <%s>, but was not.' % (self.val, other))\n  File \"C:\\Users\\Noman\\PycharmProjects\\generativesecurity\\.venv\\Lib\\site-packages\\assertpy\\assertpy.py\", line 433, in error\n    raise AssertionError(out)\n","steps":[{"name":"Given User sends POST request to initiate a scan with chatbot \"c1ca42ab-a401-45b0-a945-d9cd549d7590\" and environment \"aae0a1b6-fafe-40af-ab20-87934343521f\"","time":{"start":1757682276070,"stop":1757682281500,"duration":5430},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false},{"name":"When the user receives the scan initiation response","time":{"start":1757682281501,"stop":1757682281503,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false},{"name":"Then the status code returned should be 200 for successful scan initiation","time":{"start":1757682281504,"stop":1757682281509,"duration":5},"status":"failed","statusMessage":"AssertionError: Expected <400> to be equal to <200>, but was not.\n","statusTrace":"  File \"C:\\Users\\Noman\\PycharmProjects\\generativesecurity\\.venv\\Lib\\site-packages\\behave\\model.py\", line 1991, in run\n    match.run(runner.context)\n  File \"C:\\Users\\Noman\\PycharmProjects\\generativesecurity\\.venv\\Lib\\site-packages\\behave\\matchers.py\", line 105, in run\n    self.func(context, *args, **kwargs)\n  File \"features\\steps\\Initiate_a_new_scan_for_a_chatbot.py\", line 48, in step_impl\n    assert_that(context.response.status_code).is_equal_to(200)\n  File \"C:\\Users\\Noman\\PycharmProjects\\generativesecurity\\.venv\\Lib\\site-packages\\assertpy\\base.py\", line 126, in is_equal_to\n    self.error('Expected <%s> to be equal to <%s>, but was not.' % (self.val, other))\n  File \"C:\\Users\\Noman\\PycharmProjects\\generativesecurity\\.venv\\Lib\\site-packages\\assertpy\\assertpy.py\", line 433, in error\n    raise AssertionError(out)\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false},{"name":"And the response should contain a \"scan_id\"","time":{"start":1757682281516,"stop":1757682281516,"duration":0},"status":"skipped","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false},{"name":"And the response status should be \"SCAN_REQUESTED\"","time":{"start":1757682281516,"stop":1757682281516,"duration":0},"status":"skipped","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":5,"attachmentStep":false},"afterStages":[],"labels":[{"name":"severity","value":"normal"},{"name":"tag","value":"Test"},{"name":"feature","value":"Initiate Scan using Genr3d API"},{"name":"framework","value":"behave"},{"name":"language","value":"cpython3"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"target_chatbot","value":"c1ca42ab-a401-45b0-a945-d9cd549d7590"},{"name":"target_env","value":"aae0a1b6-fafe-40af-ab20-87934343521f"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3d96c49e8cbffb18","status":"broken","statusDetails":"requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyD08yxn7V_YAfkAY8mKDTYjfKV_qoPrdRQ\n","time":{"start":1757682175592,"stop":1757682176131,"duration":539}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":["Test"]},"source":"629877b96b5e8c86.json","parameterValues":["c1ca42ab-a401-45b0-a945-d9cd549d7590","aae0a1b6-fafe-40af-ab20-87934343521f"]}